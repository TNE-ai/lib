---
name: Scrape
# https://jasonet.co/posts/scheduled-actions/
# https://www.jeffgeerling.com/blog/2020/running-github-actions-workflow-on-schedule-and-other-events
on:
  #push:
    #branches:
      #- main
      #- rich-*
  schedule:
    # cron min(0-59) hour(0-23) day(1-31) month(1-12) day-of-week(0-6)
    - cron "*/5 * * * *"

jobs:

  lint:
    #runs-on: ubuntu-latest
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # https://ncorti.com/blog/howto-github-actions-build-matrix
        fail-fast: false
        python-version: [ 3.8, 3.9 ]
        scraper: [ SidsPharmacy.py ]

    steps:
      # checkout repo under $GITHUB_WORKSPACE
      - name: Checkout action
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive

      # install latest python version
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python --version

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # Ubuntu specific path
          path: ~/.cache/pip
          # https://github.com/actions/cache/blob/main/examples.md#python---pip
          # See if there is a cache hit looking for the requirements.txt
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f python/requirements.txt ]; then pip install -r python/requirements.txt; fi

      # run the scrapers using matrix
      - name: Run Scrapers
        run: |
          cd python
          python ${{ matrix.scraper }}

      # assumes python in in the subdirectory ./python
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov pytest-timeout
          cd python
          pytest --timeout=600 --cov=. --doctest-modules \
            --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html
